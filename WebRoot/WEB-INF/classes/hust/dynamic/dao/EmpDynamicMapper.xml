<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="empNamespace">
	<resultMap type="Emp" id="empMap">
		<id property="id" column="c_id" />
		<result property="name" column="c_name"/>
		<result property="birth" column="c_birth"/>
		<result property="phone" column="c_phone"/>
	</resultMap>

	<!-- Mybatis动态SQL实现初级/高级检索：如果只有一个条件，Mybatis会自动将and关键字去掉 -->
	<select id="highFindByConditions" parameterType="map" resultMap="empMap">
		select c_id, c_name, c_birth, c_phone
		from t_emp
		<where>
			<if test="pid != null"> and c_id = #{pid}</if>
			<if test="pname != null"> and c_name = #{pname}</if>
			<if test="pbirth != null"> and c_birth = #{pbirth}</if>
			<if test="pphone != null"> and c_phone = #{pphone}</if>
		</where>
	</select>
	
	<!-- Mybatis动态SQL实现动态更新：Mybatis会自动将最后一个逗号去掉 -->
	<update id="dynamicUpdate" parameterType="map">
		update t_emp
		<set>
			<if test="pname != null"> c_name = #{pname},</if>
			<if test="pbirth != null"> c_birth = #{pbirth},</if>
			<if test="pphone != null"> c_phone = #{pphone},</if>
		</set>
		where c_id = #{pid}
	</update>
	
	<!-- 动态删除：删除的个数不定，输入参数为数组 -->
	<delete id="dynamicDeleteArray">
		delete from t_emp 
		where c_id in
		<!-- foreach标签用于迭代数组或列表中的的元素
		     collection表示传递的参数类型（因为这里有参数类型，因此delete父标签就不用再写了）
		     open表示in后面的开始符号
		     close表示结束符号
		     separator表示元素间分隔符
		     ids表示传递的数组参数，参数名理论上可任意 -->
		<foreach collection="array" open="(" close=")" separator="," item="ids">
			#{ids}
		</foreach>
	</delete>
	
	<!-- 动态删除：删除的个数不定，输入参数为列表 -->
	<delete id="dynamicDeleteList">
		delete from t_emp 
		where c_id in
		<foreach collection="list" open="(" close=")" separator="," item="ids">
			#{ids}
		</foreach>
	</delete>
</mapper>